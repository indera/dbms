-- Transactions trend from urban/non-urban districts
SELECT count(trans_id) as TRANS_NUM,
       NTILE(2) OVER (ORDER BY RATIO_URBAN DESC) AS URBAN_RANK,
       EXTRACT( MONTH FROM CREATED_DATE ) || '-' || EXTRACT( YEAR FROM CREATED_DATE ) AS MONTH_INTERVAL
FROM TRANSACTIONS NATURAL JOIN ACCOUNT NATURAL JOIN DISPOSITION NATURAL JOIN CLIENT NATURAL JOIN DISTRICT_DETAIL group by MONTH_INTERVAL, URBAN_RANK;

-- Transactions trend from (HIG,MIG,LIG) neighborhood districts
SELECT count(trans_id) as TRANS_NUM,
       NTILE(3) OVER (ORDER BY SALARY_AVERAGE DESC) AS INCOME_GROUP_RANK,
       EXTRACT( MONTH FROM CREATED_DATE ) || '-' || EXTRACT( YEAR FROM CREATED_DATE ) AS MONTH_INTERVAL
FROM TRANSACTIONS NATURAL JOIN ACCOUNT NATURAL JOIN DISPOSITION NATURAL JOIN CLIENT NATURAL JOIN DISTRICT_DETAIL group by MONTH_INTERVAL, INCOME_GROUP_RANK;

-- Trend of card usage by type
SELECT count(trans_id) as TRANS_NUM,
       CARD_TYPE,
       EXTRACT( MONTH FROM CREATED_DATE ) || '-' || EXTRACT( YEAR FROM CREATED_DATE ) AS MONTH_INTERVAL
FROM
    TRANSACTIONS
    NATURAL JOIN ACCOUNT
    NATURAL JOIN DISPOSITION
    NATURAL JOIN CARD
    NATURAL JOIN DISTRICT_DETAIL
GROUP BY
    MONTH_INTERVAL, CARD_TYPE
;

-- Trend of transaction by bracket of transaction amount, as in higher amount vs mid amount vs low amount account holders
SELECT count(trans_id) as TRANS_NUM,
       NTILE(3) OVER (ORDER BY AMOUNT DESC) AS TRANS_AMOUNT_RANK,
       EXTRACT( MONTH FROM CREATED_DATE ) || '-' || EXTRACT( YEAR FROM CREATED_DATE ) AS MONTH_INTERVAL
FROM
    TRANSACTIONS
    NATURAL JOIN ACCOUNT
    NATURAL JOIN DISPOSITION
    NATURAL JOIN CLIENT
    NATURAL JOIN DISTRICT_DETAIL
GROUP BY
    MONTH_INTERVAL, TRANS_AMOUNT_RANK
;

-- Trend of transaction by bracket of balance, as in higher balance vs mid balance vs low balance account holders
SELECT count(trans_id) as TRANS_NUM,
       NTILE(3) OVER (ORDER BY AVG_ACCOUNT_BALANCE DESC) AS ACCOUNT_BALANCE_RANK,
       EXTRACT( MONTH FROM CREATED_DATE ) || '-' || EXTRACT( YEAR FROM CREATED_DATE ) AS MONTH_INTERVAL
       FROM (
        SELECT ACCOUNT_ID, 
            AVG(BALANCE) AS AVG_ACCOUNT_BALANCE,
        FROM
            TRANSACTIONS
        group by ACCOUNT_ID
    ) ACCOUNT_BALANCE_DETAILS
    JOIN TRANSACTIONS T ON ACCOUNT_BALANCE_DETAILS.ACCOUNT_ID=T.ACCOUNT_ID
GROUP BY
    MONTH_INTERVAL, ACCOUNT_BALANCE_RANK
;
